<?xml version='1.0' encoding='utf-8'?>
<terraferma_options>
  <geometry>
    <dimension>
      <integer_value rank="0">1</integer_value>
    </dimension>
    <mesh name="Mesh">
      <source name="File">
        <file>
          <string_value lines="1" type="filename">mesh</string_value>
        </file>
        <cell>
          <string_value lines="1">interval</string_value>
        </cell>
      </source>
    </mesh>
  </geometry>
  <io>
    <output_base_name>
      <string_value lines="1">shearzone_outs</string_value>
    </output_base_name>
    <visualization>
      <element name="P2">
        <family>
          <string_value lines="1">CG</string_value>
        </family>
        <degree>
          <integer_value rank="0">2</integer_value>
        </degree>
      </element>
    </visualization>
    <dump_periods/>
    <detectors/>
  </io>
  <timestepping>
    <current_time>
      <real_value rank="0">0.</real_value>
    </current_time>
    <finish_time>
      <real_value rank="0">.01</real_value>
    </finish_time>
    <timestep>
      <coefficient name="Timestep">
        <ufl_symbol name="global">
          <string_value lines="1">dt</string_value>
        </ufl_symbol>
        <type name="Constant">
          <rank name="Scalar" rank="0">
            <value name="WholeMesh">
              <constant>
                <real_value rank="0">1.e-5</real_value>
              </constant>
            </value>
          </rank>
        </type>
      </coefficient>
    </timestep>
  </timestepping>
  <global_parameters>
    <ufl>
      <string_value lines="20" type="code" language="python">edotv_i = A*(tau_i**n)*(d_i**m)*exp(-Tstar/T_i)
edotv_n = A*(tau_n**n)*(d_n**m)*exp(-Tstar/T_n)

edot_total = edotv_i + (tau_i - tau_n)/dt</string_value>
    </ufl>
  </global_parameters>
  <system name="shearzone">
    <mesh name="Mesh"/>
    <ufl_symbol name="global">
      <string_value lines="1">us</string_value>
    </ufl_symbol>
    <field name="Stress">
      <ufl_symbol name="global">
        <string_value lines="1">tau</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Scalar" rank="0">
          <element name="P0R">
            <family>
              <string_value lines="1">R</string_value>
            </family>
            <degree>
              <integer_value rank="0">0</integer_value>
            </degree>
          </element>
          <initial_condition type="initial_condition" name="WholeMesh">
            <constant>
              <real_value rank="0">0.</real_value>
            </constant>
          </initial_condition>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics/>
      </diagnostics>
    </field>
    <field name="Temperature">
      <ufl_symbol name="global">
        <string_value lines="1">T</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Scalar" rank="0">
          <element name="P2">
            <family>
              <string_value lines="1">CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">2</integer_value>
            </degree>
          </element>
          <initial_condition type="initial_condition" name="WholeMesh">
            <constant>
              <real_value rank="0">1.</real_value>
            </constant>
          </initial_condition>
          <boundary_condition name="Dirichlet">
            <boundary_ids>
              <integer_value shape="2" rank="1">1 2</integer_value>
            </boundary_ids>
            <sub_components name="All">
              <type type="boundary_condition" name="Dirichlet">
                <constant>
                  <real_value rank="0">1.</real_value>
                </constant>
              </type>
            </sub_components>
          </boundary_condition>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics/>
      </diagnostics>
    </field>
    <field name="Grainsize">
      <ufl_symbol name="global">
        <string_value lines="1">d</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Scalar" rank="0">
          <element name="P1">
            <family>
              <string_value lines="1">CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">1</integer_value>
            </degree>
          </element>
          <initial_condition type="initial_condition" name="WholeMesh">
            <cpp rank="0">
              <members>
                <string_value type="code" lines="20" language="cpp">double l,lambda,dsz;</string_value>
              </members>
              <initialization>
                <string_value type="code" lines="20" language="cpp">GenericFunction_ptr l_ptr = system()-&gt;fetch_coeff("ShearzoneWidth")-&gt;genericfunction_ptr(time());
GenericFunction_ptr lambda_ptr = system()-&gt;fetch_coeff("ShearzoneTaper")-&gt;genericfunction_ptr(time());
GenericFunction_ptr dsz_ptr = system()-&gt;fetch_coeff("ShearzoneGrainsize")-&gt;genericfunction_ptr(time());

l = double(*std::dynamic_pointer_cast&lt;dolfin::Constant&gt;(l_ptr));
lambda = double(*std::dynamic_pointer_cast&lt;dolfin::Constant&gt;(lambda_ptr));
dsz = double(*std::dynamic_pointer_cast&lt;dolfin::Constant&gt;(dsz_ptr));</string_value>
              </initialization>
              <eval>
                <string_value type="code" lines="20" language="cpp">double H1  = 0.5*(std::tanh((x[0] + l)/lambda) + 1.);
double H2 = 0.5*(std::tanh((x[0] - l)/lambda) + 1.);
values[0] = 1. + (dsz - 1.)*(H1 - H2);</string_value>
              </eval>
            </cpp>
          </initial_condition>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics/>
      </diagnostics>
    </field>
    <coefficient name="invPe">
      <ufl_symbol name="global">
        <string_value lines="1">invPe</string_value>
      </ufl_symbol>
      <type name="Constant">
        <rank name="Scalar" rank="0">
          <value type="value" name="WholeMesh">
            <constant>
              <real_value rank="0">1.</real_value>
            </constant>
          </value>
        </rank>
      </type>
      <diagnostics/>
      <comment>Inverse Pe number  invPe = \kappa/V0/L</comment>
    </coefficient>
    <coefficient name="DissipationNumber">
      <ufl_symbol name="global">
        <string_value lines="1">Di</string_value>
      </ufl_symbol>
      <type name="Constant">
        <rank name="Scalar" rank="0">
          <value type="value" name="WholeMesh">
            <constant>
              <real_value rank="0">4.10387734331396e-05</real_value>
            </constant>
          </value>
        </rank>
      </type>
      <diagnostics/>
      <comment>Inverse Pe number  invPe = \kappa/V0/L</comment>
    </coefficient>
    <coefficient name="CoolingRate">
      <ufl_symbol name="global">
        <string_value lines="1">R</string_value>
      </ufl_symbol>
      <type name="Constant">
        <rank name="Scalar" rank="0">
          <value type="value" name="WholeMesh">
            <constant>
              <real_value rank="0">0.</real_value>
            </constant>
          </value>
        </rank>
      </type>
      <diagnostics/>
      <comment>Inverse Pe number  invPe = \kappa/V0/L</comment>
    </coefficient>
    <coefficient name="A">
      <ufl_symbol name="global">
        <string_value lines="1">A</string_value>
      </ufl_symbol>
      <type name="Constant">
        <rank name="Scalar" rank="0">
          <value type="value" name="WholeMesh">
            <constant>
              <real_value rank="0">1.</real_value>
            </constant>
          </value>
        </rank>
      </type>
      <diagnostics/>
      <comment>dimensionless pre-exponential in flow law</comment>
    </coefficient>
    <coefficient name="n">
      <ufl_symbol name="global">
        <string_value lines="1">n</string_value>
      </ufl_symbol>
      <type name="Constant">
        <rank name="Scalar" rank="0">
          <value type="value" name="WholeMesh">
            <constant>
              <real_value rank="0">3.5</real_value>
            </constant>
          </value>
        </rank>
      </type>
      <diagnostics/>
      <comment>stress exponent</comment>
    </coefficient>
    <coefficient name="m">
      <ufl_symbol name="global">
        <string_value lines="1">m</string_value>
      </ufl_symbol>
      <type name="Constant">
        <rank name="Scalar" rank="0">
          <value type="value" name="WholeMesh">
            <constant>
              <real_value rank="0">-2.</real_value>
            </constant>
          </value>
        </rank>
      </type>
      <diagnostics/>
      <comment>grainsize exponent</comment>
    </coefficient>
    <coefficient name="Tstar">
      <ufl_symbol name="global">
        <string_value lines="1">Tstar</string_value>
      </ufl_symbol>
      <type name="Constant">
        <rank name="Scalar" rank="0">
          <value type="value" name="WholeMesh">
            <constant>
              <real_value rank="0">1.</real_value>
            </constant>
          </value>
        </rank>
      </type>
      <diagnostics/>
      <comment>dimensionless reference Temperature Tstar = Q/(RT_0)</comment>
    </coefficient>
    <coefficient name="ShearzoneWidth">
      <ufl_symbol name="global">
        <string_value lines="1">l</string_value>
      </ufl_symbol>
      <type name="Constant">
        <rank name="Scalar" rank="0">
          <value type="value" name="WholeMesh">
            <constant>
              <real_value rank="0">.1</real_value>
            </constant>
          </value>
        </rank>
      </type>
      <diagnostics/>
    </coefficient>
    <coefficient name="ShearzoneTaper">
      <ufl_symbol name="global">
        <string_value lines="1">szlambda</string_value>
      </ufl_symbol>
      <type name="Constant">
        <rank name="Scalar" rank="0">
          <value type="value" name="WholeMesh">
            <constant>
              <real_value rank="0">.005</real_value>
              <comment>taper width for edges of shear zone</comment>
            </constant>
          </value>
        </rank>
      </type>
      <diagnostics/>
    </coefficient>
    <coefficient name="ShearzoneGrainsize">
      <ufl_symbol name="global">
        <string_value lines="1">dsz</string_value>
      </ufl_symbol>
      <type name="Constant">
        <rank name="Scalar" rank="0">
          <value type="value" name="WholeMesh">
            <constant>
              <real_value rank="0">.1</real_value>
              <comment>taper width for edges of shear zone</comment>
            </constant>
          </value>
        </rank>
      </type>
      <diagnostics/>
      <comment>dimensionless grain-size in shear-zone</comment>
    </coefficient>
    <nonlinear_solver name="SNES">
      <type name="SNES">
        <form name="Residual" rank="0">
          <string_value type="code" lines="20" language="python">K = 1.
F_tau = tau_t*(tau_i - tau_n)*dx  + dt*tau_t*edotv_i*dx - dt*(tau_t*ds(2) + tau_t*ds(1))
F_T = T_t*(T_i - T_n)*dx + dt*invPe*K*inner(grad(T_t),grad(T_i))*dx
F_T += -dt*Di*T_t*tau_i*edotv_i*dx - dt*T_t*R*(1. - T_i)*dx
F_d = d_t*(d_i - d_n)*dx

F = F_tau + F_T + F_d</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">F</string_value>
          </ufl_symbol>
        </form>
        <form name="Jacobian" rank="1">
          <string_value type="code" lines="20" language="python">J = derivative(F,us_i,us_a)</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">J</string_value>
          </ufl_symbol>
        </form>
        <quadrature_rule name="default"/>
        <snes_type name="ls">
          <ls_type name="cubic"/>
          <convergence_test name="default"/>
        </snes_type>
        <relative_error>
          <real_value rank="0">1.e-7</real_value>
        </relative_error>
        <absolute_error>
          <real_value rank="0">1.e-10</real_value>
        </absolute_error>
        <max_iterations>
          <integer_value rank="0">20</integer_value>
        </max_iterations>
        <monitors>
          <residual/>
        </monitors>
        <linear_solver>
          <iterative_method name="preonly"/>
          <preconditioner name="lu">
            <factorization_package name="mumps"/>
          </preconditioner>
        </linear_solver>
        <never_ignore_solver_failures/>
      </type>
      <solve name="in_timeloop"/>
    </nonlinear_solver>
  </system>
  <system name="strainrate">
    <mesh name="Mesh"/>
    <ufl_symbol name="global">
      <string_value lines="1">ue</string_value>
    </ufl_symbol>
    <field name="strainrate">
      <ufl_symbol name="global">
        <string_value lines="1">edot</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Scalar" rank="0">
          <element name="P1">
            <family>
              <string_value lines="1">CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">1</integer_value>
            </degree>
          </element>
          <initial_condition type="initial_condition" name="WholeMesh">
            <constant>
              <real_value rank="0">0.</real_value>
            </constant>
          </initial_condition>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics/>
      </diagnostics>
    </field>
    <nonlinear_solver name="SNES">
      <type name="SNES">
        <form name="Residual" rank="0">
          <string_value lines="20" type="code" language="python">F = edot_t*(edot_i - edot_total)*dx</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">F</string_value>
          </ufl_symbol>
        </form>
        <form name="Jacobian" rank="1">
          <string_value lines="20" type="code" language="python">J = derivative(F,ue_i,ue_a)</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">J</string_value>
          </ufl_symbol>
        </form>
        <quadrature_rule name="default"/>
        <snes_type name="ls">
          <ls_type name="cubic"/>
          <convergence_test name="default"/>
        </snes_type>
        <relative_error>
          <real_value rank="0">1.e-7</real_value>
        </relative_error>
        <absolute_error>
          <real_value rank="0">1.e-10</real_value>
        </absolute_error>
        <max_iterations>
          <integer_value rank="0">20</integer_value>
        </max_iterations>
        <monitors>
          <residual/>
        </monitors>
        <linear_solver>
          <iterative_method name="preonly"/>
          <preconditioner name="lu">
            <factorization_package name="mumps"/>
          </preconditioner>
        </linear_solver>
        <never_ignore_solver_failures/>
      </type>
      <solve name="with_diagnostics"/>
    </nonlinear_solver>
    <comment>projects total strainrate field for output</comment>
  </system>
</terraferma_options>
